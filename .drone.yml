workspace:
  base: /go
  path: src/github.com/Depado/goploader/

matrix:
  TAG:
    - 1.8
    - latest
  ARCH:
    - arm
    - amd64

pipeline:
  prerequisites:
    image: golang:${TAG}
    commands:
      - go get ./...
      - go get github.com/GeertJohan/go.rice
      - go get github.com/GeertJohan/go.rice/rice
      - go get github.com/mitchellh/gox

  build:
    image: golang:${TAG}
    commands:
      - rice embed-go -i=github.com/Depado/goploader/server
      - go build -o server/server ./server
      - go build -o client/client ./client
      - rice clean -i=github.com/Depado/goploader/server
    environment:
      - GOARCH=${ARCH}
      - CGO_ENABLED=0
  
  # Realse only for the latest stable version of Go
  server-release:
    image: golang:${TAG}
    commands:
      - mkdir goploader-server
      - rice embed-go -i=github.com/Depado/goploader/server
      - go build -o goploader-server/server-standalone github.com/Depado/goploader/server
      - tar czf server-standalone_${ARCH}.tar.gz goploader-server
      - rm -r goploader-server/*
      - rice clean -i=github.com/Depado/goploader/server
      - cp -r server/assets/ goploader-server/
      - cp -r server/templates/ goploader-server/
      - go build -o goploader-server/server github.com/Depado/goploader/server
      - tar czf server_${ARCH}.tar.gz goploader-server/
    environment:
      - GOARCH=${ARCH}
      - CGO_ENABLED=0
    when:
      matrix:
        TAG: 1.8
  
  # Executed only once (only one matrix)
  client-release:
    image: golang:${TAG}
    commands:
      - mkdir clients
      - gox -output="releases/clients/client_{{.OS}}_{{.Arch}}" github.com/Depado/goploader/client
      - tar czf releases/servers/clients.tar.gz releases/clients
    when:
      matrix:
        TAG: 1.8
        ARCH: amd64